stages:   
  - static analysis 
  - build
  - test

# CI variables
.variables:
  default_variables: &default_variables 
    HESTIA_CI_REGISTRY: "harbor.core.ichec.ie/hestia"
    CMAKE_BUILD_DIR: "${CI_PROJECT_DIR}/build"
    CMAKE_BUILD_TYPE: Release 
    CXX: g++
    CC: gcc
    CMAKE_EXPORT_COMPILE_COMMANDS: "ON"
    HESTIA_PROJECT_VERSION: 0.3.0
    HESTIA_BUILD_TESTS: "OFF" 
    HESTIA_BUILD_DOCUMENTATION: "OFF"
    HESTIA_CODE_COVERAGE: "OFF"
    HESTIA_DEPS: "${CI_PROJECT_DIR}/infra/deps/rocky8"

# CI code snippets
.snippets: 
  - &configure 
    mkdir -p "${CMAKE_BUILD_DIR}"
    && pushd "${CMAKE_BUILD_DIR}"
    && (
      set -x;
      cmake ${CI_PROJECT_DIR} 
      -DCMAKE_BUILD_TYPE="${CMAKE_BUILD_TYPE}" 
      -DCMAKE_EXPORT_COMPILE_COMMANDS="${CMAKE_EXPORT_COMPILE_COMMANDS}" 
      -DCMAKE_CXX_COMPILER="${CXX}" 
      -DCMAKE_PROJECT_VERSION="${HESTIA_PROJECT_VERSION}"
      -DHESTIA_BUILD_TESTS="${HESTIA_BUILD_TESTS}"
      -DHESTIA_BUILD_DOCUMENTATION="${HESTIA_BUILD_DOCUMENTATION}"
      -DCODE_COVERAGE="${HESTIA_CODE_COVERAGE}"
    )
    && popd
  - &build 
    make -C "${CMAKE_BUILD_DIR}" -j$(nproc)
  - &test
    make -C "${CMAKE_BUILD_DIR}" CTEST_OUTPUT_ON_FAILURE=1 test -j$(nproc)

.artifacts:
  build_artifacts: &build_artifacts
    name:  "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
    paths:
      - build/
    expire_in: 30 min

Image_build:
  stage: .pre
  tags:
    - docker
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  variables:
    <<: *default_variables 
  before_script:
    - cp $DOCKER_AUTH_CONFIG /kaniko/.docker/config.json
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/infra/containers/rocky8/ci-base.Dockerfile"
      --destination "${HESTIA_CI_REGISTRY}/ci-base:${CI_COMMIT_BRANCH}"
  rules:
    - if: $CI_COMMIT_BRANCH
      when: manual
      allow_failure: false

.default_job: &default_job 
  image: ${HESTIA_CI_REGISTRY}/ci-base:latest
  tags: 
    - docker
  variables:
    <<: *default_variables 
  script: 
    - *configure 
    - *build

Format: 
  <<: *default_job
  stage: static analysis
  script: 
    - ./infra/scripts/run_format.sh
      && git status 
      && git diff-index --quiet HEAD 
      || { echo "This commit contains unformatted files! Run tools/run_format.sh to format them correctly."; false; }

Lint: 
  <<: *default_job
  stage: static analysis
  variables:
    <<: *default_variables
    CMAKE_BUILD_TYPE: Debug
    CMAKE_EXPORT_COMPILE_COMMANDS: "ON"
    CXX: clang++
    CC: clang
    HESTIA_BUILD_TESTS: "ON" 
  before_script:
    - *configure
    - make -C "${CMAKE_BUILD_DIR}" hestia_fetch_lint_dependencies
  script:
    - ./infra/scripts/run_lint.sh "${CMAKE_BUILD_DIR}"

Release:
  <<: *default_job
  stage: build
  variables:
    <<: *default_variables
    HESTIA_BUILD_DOCUMENTATION: "ON"
  script: 
    - *configure 
    - *build 
    - make -C "${CMAKE_BUILD_DIR}" doxygen
    - make -C "${CMAKE_BUILD_DIR}" package
  artifacts:
    name:  "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
    paths:
      - ${CMAKE_BUILD_DIR}/*.rpm
    expire_in: 1 day

Unit_test:
  <<: *default_job
  stage: test
  dependencies: 
    - Release
  variables:
    <<: *default_variables
    CMAKE_BUILD_TYPE: Debug
    CXX: clang++
    CC: clang
    HESTIA_BUILD_TESTS: "ON"
    HESTIA_CODE_COVERAGE: "ON"
  script:
    - *configure
    - *build
    - *test
#    - make -C "${CMAKE_BUILD_DIR}" ccov-hestia_unit_tests
#    - make -C "${CMAKE_BUILD_DIR}" ccov-report-hestia_unit_test

E2E_test:
  <<: *default_job
  stage: test
  dependencies: 
    - Release
  script:
    - python3 ${CI_PROJECT_DIR}/test/e2e_tests/run_e2e_tests.py --source_dir=${CI_PROJECT_DIR} --build_dir=${CMAKE_BUILD_DIR} --package_name=${CMAKE_BUILD_DIR}/hestia-0.0.1-Linux.rpm